
@{
    /**/

    /**/

    /**/

    Layout = null;
}
@using Oss.Models;

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/Content/layuiadmin/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/layuiadmin/style/admin.css" rel="stylesheet" />
</head>
<body>

    <div>
        <table>
            <tr>
                <td>姓名： </td>
                <td><input type="text" name="title" required lay-verify="required" placeholder="请输入姓名" autocomplete="off" class="layui-input" id="txtName"></td>

                <td><button class="layui-btn layui-btn-normal" onclick="btnSearch();">查询</button></td>
                <td><button class="layui-btn layui-btn-normal" onclick="Add();">添加</button></td>
            </tr>
        </table>

        @*
            <button class="layui-btn layui-btn-sm" lay-event="update">编辑</button>
            <button class="layui-btn layui-btn-sm" lay-event="delete">删除</button>*@
        @*<table class="layui-hide" id="test" lay-filter="test"></table>*@
        <script type="text/html" id="barDemo">
            <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
            <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
        </script>
        @*数据表格*@
        <table class="layui-hide" id="test" lay-filter="test"></table>

    </div>
    @*添加表单*@
    <div class="layui-form" id="MyModal" hidden="hidden">

        <div class="layui-form-item">
            <label class="layui-form-label">角色ID</label>
            <div class="layui-input-inline">
                <input type="text" name="RID" id="RID" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
            </div>
            <div class="layui-form-mid layui-word-aux"></div>
        </div>

        <div class="layui-form-item">
            <label class="layui-form-label">角色名</label>
            <div class="layui-input-inline">
                @*<select name="RName" lay-verify="required" id="RName">
                    <option value="">--请选择--</option>

                    @foreach (Role r in ViewData["R_Name"] as List<Role>)
                    {
                        <option value="@r.Name">@r.Name</option>
                    }

                </select>
            </div>*@
        </div>


        <div class="layui-form-item">
            <label class="layui-form-label">编码</label>
            <div class="layui-input-inline">
                <input type="text" name="Code" id="RCode" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
            </div>
            <div class="layui-form-mid layui-word-aux"></div>
        </div>

        <div class="layui-form-item">
            <div class="layui-input-block">
                <button class="layui-btn" lay-submit lay-filter="formDemo" onclick="AddUser()">添加</button>
                <button type="reset" class="layui-btn layui-btn-primary">重置</button>
            </div>
        </div>
    </div>



    @*编辑表单2*@
    <div class="layui-form" id="MyUpdate" hidden="hidden">

        <div class="layui-form-item">
            <label class="layui-form-label">角色ID</label>
            <div class="layui-input-inline">
                <input type="text" name="R_ID" id="R_ID" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input" readonly="readonly" @*限制修改*@>
            </div>
            <div class="layui-form-mid layui-word-aux"></div>
        </div>

        <div class="layui-form-item">
            <label class="layui-form-label">角色名</label>
            <div class="layui-input-inline">
                @*<select name="RName" lay-verify="required" id="R_Name">
                    <option value="">--请选择--</option>

                    @foreach (Role r in ViewData["R_Name"] as List<Role>)
                    {
                        <option value="@r.Name">@r.Name</option>
                    }

                </select>*@
            </div>
        </div>


        <div class="layui-form-item">
            <label class="layui-form-label">编码</label>
            <div class="layui-input-inline">
                <input type="text" name="Code" id="R_Code" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
            </div>
            <div class="layui-form-mid layui-word-aux"></div>
        </div>

        <div class="layui-form-item">
            <div class="layui-input-block">
                <button class="layui-btn" lay-submit lay-filter="formDemo" id="RoleUpdate" onclick="RoleUpdate()">编辑</button>
            </div>
        </div>
    </div>
    <script src="~/Content/layuiadmin/layui/layui.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script>
        layui.config({
            base: '../Content/layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index' //主入口模块
        }).use('index', 'from');
        layui.use('table', function () {
            var table = layui.table;

            table.render({
                elem: '#test'//表格的id
                , url: '/ProcessStepRecord/SelectProcessStepRecord/'//    /控制器名/方法名（该方法用来获取json格式数据）
                , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                , toolbar: '#toolbarDemo'
                , totalRow: true //开启合计行
                , cols: [[
                    { type: 'checkbox', fixed: 'left' }
                    , { field: 'ID', title: '流程ID', sort: true }
                    , { field: 'Type', title: '流程类型' } //width 支持：数字、百分比和不填写。你还可以通过 minWidth 参数局部定义当前单元格的最小宽度，layui 2.2.1 新增
                    , { field: 'RecordRemarks', title: '记录备注    ' }
                    , { field: 'StepOrder', title: '步骤顺序' }
                    , { field: 'WaitForExecutionStaffId', title: '待执行操作人' }
                    , { field: 'CreateTime', title: '创建时间' }
                    , { field: 'UpdateTime', title: '修改时间' }
                    , { field: 'WhetherToExecute', title: '是否已执行' }
                    , { field: 'No', title: '关联主单据编号    ' }
                    , { field: 'R_RefOrderIdCode', title: '关联主单据Id' }
                    , { field: 'Result', title: '结果(是否审批通过)' }
                    , { field: 'ExecuteMethod', title: '执行方法 执行函数' }
                    , { field: 'Discrible', title: '描述' }
                    , {
                        field: '', width: 165, align: 'center', toolbar: '#barDemo', title: '操作 '
                    }
                    // , { field: 'D_Name', title: '部门', align: 'center' } //单元格内容水平居中

                ]]
                , page: { //支持传入 laypage 组件的所有参数（某些参数除外，如：jump/elem） - 详见文档
                    layout: ['limit', 'count', 'prev', 'page', 'next', 'skip'] //自定义分页布局
                    //,curr: 5 //设定初始在第 5 页
                    , groups: 1 //只显示 1 个连续页码
                    , first: false //不显示首页
                    , last: false //不显示尾页

                }
            });

            //监听行工具事件,删除，修改
            table.on('tool(test)', function (obj) { //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
                var data = obj.data //获得当前行数据
                    , layEvent = obj.event; //获得 lay-event 对应的值
                if (layEvent === 'del') {
                    layer.confirm('真的删除行么', function (index) {
                        //obj.del(); //删除对应行（tr）的DOM结构
                       // layer.alert('编辑 [Name]：' + data.R_Name);
                        $.ajax({
                            type: "post"
                            , dataType: "json"
                            , url: "/RoleManagers/RoleDel/"
                            ,data: {
                                RID: data.R_ID
                            }
                            , success: function (data) {
                                if (data) {
                                    //删除成功
                                    layer.alert('删除成功！');//弹出提示框
                                    layer.close(index);
                                    btnSearch(1);//刷新表格

                                } else {
                                    //修改失败
                                    layer.alert('修改失败！');//弹出提示框

                                }
                            }
                        })
                        //向服务端发送删除指令
                    });
                } else if (layEvent === 'edit') {

                    //layer.alert('编辑 [Name]：' + data.R_Name);

                    //打开编辑页面
                    layer.open({
                        title: '编辑信息',
                        type: 1,
                        skin: 'layui-layer-rim', //加上边
                        area: ['400px', '300px'], //宽高
                        content: $("#MyUpdate"),  //打开弹框后进入
                        success: function (data) {
                            var data = obj.data;//需重新获取当前行数据
                            if (data) {
                                $("#R_ID").attr("value", data.R_ID);
                                $("#R_Name").val(data.R_Name);
                                $("#R_Code").attr("value", data.R_Code);//给编辑框赋值
                                renderform();  //重新渲染
                            }
                        }

                    })
                }
            });
        });

        //重新渲染表单函数
        function renderform() {
            layui.use('form', function () {
                var form = layui.form; //大部分都是form才能让数据显示在最上面
                form.render();
            });
        }

        //修改
        function RoleUpdate() {
            var layer = layui.layer;
            $.ajax({
                type: "post",//请求方式get，post
                url: "/RoleManagers/RoleUp",//路径，方法
                dataType:"json",//返回的参数
                data: {
                    //前端向后台传的参数
                    R_ID: $("#R_ID").val(),
                    R_Name: $("#R_Name").val(),
                    R_Code: $("#R_Code").val()
                }, success: function (data){
                    if (data) {
                         //修改成功
                        layer.alert('修改成功！');//弹出提示框
                        layer.closeAll(); //疯狂模式，关闭所有层
                       // layer.close(layer.open);//Layui 内置方法
                       // $('#MyUpdate').modal("hide");//隐藏模态框
                        btnSearch();//刷新表格

                    } else {
                        //修改失败
                        layer.alert('修改失败！');//弹出提示框

                    }
                }

            })

        }

        //表单查询（刷新）
        function btnSearch() {
            var table = layui.table;
            table.reload('test', {
                where: { //设定异步数据接口的额外参数，任意设
                    name: $("#txtName").val()
                    //…
                }
            })
        }

        //弹框>添加

        function Add() {
            var layer = layui.layer;
            layer.open({
                type: 1,
                skin: 'layui-layer-rim', //加上边框
                area: ['800px', '600px'], //宽高
                content: $("#MyModal")
            });
        }
        function AddUser() {
            var layer = layui.layer;
            $.ajax({
                type: "post",
                dataType: "json",
                url: "/RoleManagers/AddAll",
                data: {
                    RID: $("#RID").val(),
                    RName: $("#RName").val(),
                    RCode: $("#RCode").val()
                }, success: function (data,) {
                    if (data) {
                        //添加成功
                        var index = layer.open();
                        layer.alert('添加成功！');//弹出提示框
                        layer.closeAll(); //疯狂模式，关闭所有层
                        //$("#MyModal").hide();//隐藏模态框
                        btnSearch();//刷新表格
                    } else {
                        //添加失败
                        layer.alert('添加失败！');//弹出提示框

                    }
                }

            });
        }




    </script>
</body>
</html>
