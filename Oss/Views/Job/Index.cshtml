
@{
    /**/

    /**/

    /**/

    Layout = null;
}
@using Oss.Models;

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/Content/layuiadmin/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/layuiadmin/style/admin.css" rel="stylesheet" />
    <link href="~/Content/layuiadmin/module/treetable-lay/treetable.css" rel="stylesheet" />
    <link href="~/design/css/layui.css" rel="stylesheet" />
    @*<link href="~/design/css/layui.css" rel="stylesheet" />*@
</head>
<body>

    <div>
        <table style="background-color:darkturquoise;width:100%;">
            <tr>
                <td style="width:300px;color:black;height:60px; line-height:60px;font-size:24px;">基础信息维护>>职位管理 </td>
                <td>
                    <button type="button" class="layui-btn" id="AddOthers" onclick="Add()">
                        <i class="layui-icon">&#xe608;</i> 新增
                    </button>
                </td>
            </tr>
        </table>

        <table>
            <tr>
                <td>
                    <div class="layui-form-item">
                        <label class="layui-form-label layui-bg-cyan layui-center">职位名称</label>
                        <div class="layui-input-inline">
                            <input type="text" name="JobName" id="JobName" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                        </div>
                        <div class="layui-form-mid layui-word-aux"></div>
                    </div>
                </td>
                <td>
                    <div class="layui-form-item">
                        <label class="layui-form-label layui-bg-cyan layui-center">职位代码</label>
                        <div class="layui-input-inline">
                            <input type="text" name="JobCode" id="JobCode" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                        </div>
                        <div class="layui-form-mid layui-word-aux"></div>
                    </div>
                </td>
            </tr>
        </table>
        <script type="text/html" id="barDemo">
            <button class="layui-btn layui-btn-normal" lay-event="edit">修改</button>
            <button class="layui-btn layui-btn-danger" lay-event="del">删除</button>
        </script>
        @*添加表单*@
        <div class="layui-form" id="MyModal" hidden="hidden">

            <div class="layui-form-item">
                <label class="layui-form-label">职位名称</label>
                <div class="layui-input-inline">
                    <input type="text" name="Name" id="Name" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                </div>
                <div class="layui-form-mid layui-word-aux"></div>
            </div>


            <div class="layui-form-item">
                <label class="layui-form-label">职位编码</label>
                <div class="layui-input-inline">
                    <input type="text" name="Code" id="Code" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                </div>
                <div class="layui-form-mid layui-word-aux"></div>
            </div>

            <div class="layui-form-item">
                <div class="layui-input-block">
                    <button class="layui-btn" lay-submit lay-filter="formDemo" onclick="AddUser()">添加</button>
                    <button type="reset" class="layui-btn layui-btn-primary">重置</button>
                </div>
            </div>
        </div>
        @*编辑表单*@
        <div class="layui-form" id="MyUpdate" hidden="hidden">



            <div class="layui-form-item">
                <label class="layui-form-label">职位名称</label>
                <div class="layui-input-inline">
                    <input type="text" name="JName" id="JName" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                </div>
                <div class="layui-form-mid layui-word-aux"></div>
            </div>


            <div class="layui-form-item">
                <label class="layui-form-label">职位编码</label>
                <div class="layui-input-inline">
                    <input type="text" name="JCode" id="JCode" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                </div>
                <div class="layui-form-mid layui-word-aux"></div>
            </div>

            <div class="layui-form-item">
                <div class="layui-input-block">
                    <button class="layui-btn" lay-submit lay-filter="formDemo" id="RoleUpdate" onclick="JobUpdate()">编辑</button>
                </div>
            </div>
        </div>
        @*数据表格*@
        <table class="layui-hide" id="test" lay-filter="test"></table>

    </div>
  



    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/design/layui.js"></script>
    <script src="~/Content/layuiadmin/layui/layui.js"></script>
    <script>
        //加载表单
        layui.config({
            base: '../Content/layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index' //主入口模块
        }).use('index', 'from');

        layui.use('table', function () {
            var table = layui.table;

            table.render({
                elem: '#test'//表格的id
                , url: '/Job/SelectJob'//    /控制器名/方法名（该方法用来获取json格式数据）
                , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                , totalRow: true //开启合计行
                , cols: [[
                      { field: 'JName', title: '职位名', width: 300 } //width 支持：数字、百分比和不填写。你还可以通过 minWidth 参数局部定义当前单元格的最小宽度，layui 2.2.1 新增
                    , { field: 'JCode', title: '编码', width: 360 }
                    , {
                        field: '', width: 400, align: 'center', toolbar: '#barDemo', title: '操作 '
                    }
                    // , { field: 'D_Name', title: '部门', align: 'center' } //单元格内容水平居中

                ]]            
            });


            //监听行工具事件,删除，修改
            table.on('tool(test)', function (obj) { //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
                var data = obj.data //获得当前行数据
                    , layEvent = obj.event; //获得 lay-event 对应的值
                if (layEvent === 'del') {
                    layer.confirm('真的删除行么', function (index) {
                        //obj.del(); //删除对应行（tr）的DOM结构
                        // layer.alert('编辑 [Name]：' + data.R_Name);
                        $.ajax({
                            type: "post"
                            , dataType: "json"
                            , url: "/Job/JobDel/"
                            , data: {
                                JName: data.JName
                            }
                            , success: function (data) {
                                if (data) {
                                    //删除成功
                                    layer.alert('删除成功！');//弹出提示框
                                    layer.close(index);
                                    btnSearch(1);//刷新表格

                                } else {
                                    //删除失败
                                    layer.alert('删除失败！');//弹出提示框

                                }
                            }
                        })
                        //向服务端发送删除指令
                    });
                } else if (layEvent === 'edit') {

                    //layer.alert('编辑 [Name]：' + data.R_Name);

                    //打开编辑页面
                    layer.open({
                        title: '编辑信息',
                        type: 1,
                        skin: 'layui-layer-rim', //加上边
                        area: ['400px', '300px'], //宽高
                        content: $("#MyUpdate"),  //打开弹框后进入
                        success: function (data) {
                            var data = obj.data;//需重新获取当前行数据
                            if (data) {
                                $("#JName").val(data.JName);
                                $("#JCode").attr("value",data.JCode);//给编辑框赋值
                                renderform();  //重新渲染
                            }
                        }

                    })
                }
            });

        });




        // 重新渲染表单函数
        function renderform() {
            layui.use('form', function () {
                var form = layui.form; //大部分都是form才能让数据显示在最上面
                form.render();
            });
        }
        function renderTable() {
            layui.use('table', function () {
                var table = layui.table;
                table.render();
            });
        }
        //表单查询（刷新）
        function btnSearch() {
            var table = layui.table;
            table.reload('test', {
                where: { //设定异步数据接口的额外参数，任意设
                    name: $("#txtName").val()
                    //…
                }
            })
        }

        //添加
        function Add() {
            var layer = layui.layer;
            layer.open({
                type: 1,
                skin: 'layui-layer-rim', //加上边框
                area: ['400px', '300px'], //宽高
                content: $("#MyModal")
            });
        }     
        function AddUser() {
            var layer = layui.layer;
            $.ajax({
                type: "post",
                dataType: "json",
                url: "/Job/AddAll",
                data: {
                    Name: $("#Name").val(),
                    Code: $("#Code").val()
                }, success: function (data) {
                    if (data) {
                        //添加成功
                        var index = layer.open();
                        layer.alert('添加成功！');//弹出提示框
                        layer.closeAll(); //疯狂模式，关闭所有层
                        //$("#MyModal").hide();//隐藏模态框
                        btnSearch();//刷新表格
                    } else {
                        //添加失败
                        layer.alert('添加失败！');//弹出提示框

                    }
                }

            });
        }
        //修改
        function JobUpdate() {
            var layer = layui.layer;
            $.ajax({
                type: "post",//请求方式get，post
                url: "/Job/JobUp",//路径，方法
                dataType: "json",//返回的参数
                data: {
                    //前端向后台传的参数
                    JName: $("#JName").val(),
                    JCode: $("#JCode").val()
                }, success: function (data) {
                    if (data) {
                        //修改成功
                        layer.alert('修改成功！');//弹出提示框
                        layer.closeAll(); //疯狂模式，关闭所有层
                        // layer.close(layer.open);//Layui 内置方法
                        // $('#MyUpdate').modal("hide");//隐藏模态框
                        btnSearch();//刷新表格

                    } else {
                        //修改失败
                        layer.alert('修改失败！');//弹出提示框

                    }
                }

            })

        }




    </script>
</body>
</html>
