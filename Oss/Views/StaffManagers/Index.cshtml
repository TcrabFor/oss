
@{
    /**/

    /**/

    /**/

    Layout = null;
}
@using Oss.Models;

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/Content/layuiadmin/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/layuiadmin/style/admin.css" rel="stylesheet" />
</head>
<body>

    <div>
        <table style="background-color:darkturquoise;width:100%;">
            <tr>
                <td style="width:260px;color:black;height:60px; line-height:60px;font-size:24px;">系统设置>>员工角色组 </td>
                <td>
                    <button type="button" class="layui-btn layui-btn-danger" id="AddOthers" onclick="AddOthers()">
                        <i class="layui-icon">&#xe608;</i>添加
                    </button>
                </td>
            </tr>
        </table>
        <table>
            <tr>
                <td>
                    <div class="layui-form-item">
                        <label class="layui-form-label layui-bg-cyan layui-center">员工编号</label>
                        <div class="layui-input-inline">
                            <input type="text" name="JobCode" id="JobCode" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                        </div>
                        <div class="layui-form-mid layui-word-aux"></div>
                    </div>
                </td>

                <td>
                    <div class="layui-form-item">
                        <label class="layui-form-label layui-bg-cyan layui-center">角色姓名</label>
                        <div class="layui-input-inline">
                            <input type="text" name="JobCode" id="JobCode" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                        </div>
                        <div class="layui-form-mid layui-word-aux"></div>
                    </div>
                </td>

                <td>
                    <div class="layui-form-item">
                        <div class="layui-input-inline">
                            <button class="layui-btn layui-bg-cyan">查询</button>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
        @*//操作*@
        <script type="text/html" id="barDemo">
            <button class="layui-btn" lay-event="SetStaff">设置角色</button>
        </script>
        @*数据表格*@
        <table class="layui-hide" id="test" lay-filter="test"></table>

    </div>
    @*表单*@
    <div class="layui-form" id="MyUpdate" hidden="hidden">

        <table>
            <tr>
                <td>
                    <div class="layui-form-item">
                        <label class="layui-form-label">角色名称</label>
                        <div class="layui-input-inline">
                            <input type="text" name="R_Name" id="R_Name" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                        </div>
                        <div class="layui-form-mid layui-word-aux"></div>
                    </div>
                </td>
                <td>
                    <div class="layui-form-item">
                        <label class="layui-form-label">角色代码</label>
                        <div class="layui-input-inline">
                            <input type="text" name="Code" id="R_Code" value="" required lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                        </div>
                        <div class="layui-form-mid layui-word-aux"></div>
                    </div>
                </td>
                <td>
                    <button class="layui-btn">查询</button>
                </td>
                <td>

                    <button class="layui-btn layui-bg-cyan"  onclick="AddSet()" >保存</button>
                </td>
            </tr>
        </table>
        @*数据表格*@
        <table class="layui-hide" id="test2" lay-filter="test2"></table>
    </div>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Content/layuiadmin/layui/layui.js"></script>
    <script>
        layui.config({
            base: '../Content/layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index' //主入口模块
        }).use('index', 'from');

        layui.use('table', function () {
            var table = layui.table;

            table.render({
                elem: '#test'//表格的id
                , url: '/StaffManagers/SelectStaff/'//    /控制器名/方法名（该方法用来获取json格式数据）
                , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                //, toolbar: '#toolbarDemo'
                , totalRow: true //开启合计行
                , cols: [[
                    , { field: 'S_ID', title: '员工编号', sort: true, width: 300 }
                    , { field: 'S_Name', title: '员工名', width: 100 } //width 支持：数字、百分比和不填写。你还可以通过 minWidth 参数局部定义当前单元格的最小宽度，layui 2.2.1 新增
                    , { field: 'S_Sex', title: '员工性别', width: 160 }
                    , {
                        field: '', width: 400, align: 'center', toolbar: '#barDemo', title: '操作 '
                    }
                ]]
                , page: { //支持传入 laypage 组件的所有参数（某些参数除外，如：jump/elem） - 详见文档
                    layout: ['limit', 'count', 'prev', 'page', 'next', 'skip'] //自定义分页布局
                    , groups: 1 //只显示 1 个连续页码
                    , first: false //不显示首页
                    , last: false //不显示尾页
                }
            });




            //监听行工具事件,删除，修改
            table.on('tool(test)', function (obj) { //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
                //var data = obj.data, //获得当前行数据
                layEvent = obj.event; //获得 lay-event 对应的值
                if (layEvent === 'SetStaff') {
                    //layer.alert('编辑 [Name]：' + data.R_Name);
                    //打开设置页面
                    layer.open({
                        title: '设置角色',
                        type: 1,
                        skin: 'layui-layer-rim', //加上边
                        area: ['600px', '400px'], //宽高
                        content: $("#MyUpdate"),  //打开弹框后进入
                        success: function (data) {
                            var data = obj.data;//需重新获取当前行数据
                            if (data) {
                                var S_Name = data.S_Name;
                                
                                layui.use('table', function () {
                                    var table2 = layui.table;
                                    table2.render({
                                        elem: '#test2'//表格的id
                                        ,method: 'get'
                                        , url: '/StaffManagers/SelectRole/'//    /控制器名/方法名（该方法用来获取json格式数据）
                                        , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                                        //, toolbar: '#toolbarDemo'
                                        , totalRow: true //开启合计行                                       
                                        , cols: [[
                                            { type: 'checkbox', fixed: 'left' }
                                            , { field: 'R_Name', title: '角色名', width: 220 } //width 支持：数字、百分比和不填写。你还可以通过 minWidth 参数局部定义当前单元格的最小宽度，layui 2.2.1 新增
                                            , { field: 'R_Code', title: '角色代码', width: 320 }
                                        ]]
                                      

                                    });
                                    renderform();  //重新渲染
                                });


                                //监听复选框事件
                                table.on('checkbox(test2)', function (obj) {
                                    var data = obj.data;
                                    console.log(obj.checked); //当前是否选中状态
                                    console.log(obj.data); //选中行的相关数据
                                    console.log(obj.type); //如果触发的是全选，则为：all，如果触发的是单选，则为：one
                                    var R_Name = data.R_Name;
                                    layer.alert('用户[' + S_Name + ']' + '成为了' + '[' + R_Name + ']');
                                });
            
                            }


                        }

                    })
                }
            });
        });




        //重新渲染表单函数
        function renderform() {
            layui.use('form', function () {
                var form = layui.form; //大部分都是form才能让数据显示在最上面
                form.render();
            });
        }

        //function AddSet() {

        //    table2.on('toolbar(test2)', function (obj) {
        //        var checkStatus = table.checkStatus(obj.config.id);
        //        data = checkStatus.data;
              
        //    });
        //    layer.closeAll();
        //}
       
        //表单查询（刷新）
        function btnSearch() {
            var table = layui.table;
            table.reload('test', {
                where: { //设定异步数据接口的额外参数，任意设
                    name: $("#txtName").val()
                    //…
                }
            })
        }

      




    </script>
</body>
</html>
